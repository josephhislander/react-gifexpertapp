{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","divRoot","document","getElementById","ReactDOM","render"],"mappings":"mMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SApBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,QCPlBG,EAAc,SAAC,GAAsB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAIrC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,kCAAKA,EAAL,W,uBCNCK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbN,EAFa,iDAEoCO,UAAUF,GAF9C,+DAGAG,MAAOR,GAHP,cAGbS,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAE1B,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAXvB,kBAeZY,GAfY,4CAAH,sDCGPK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAGtB,ECL0B,SAACA,GAE1B,MAA0BrB,mBACtB,CACI2B,KAAM,GACNO,SAAS,IAHjB,mBAAOC,EAAP,KAAcC,EAAd,KAuBE,OAhBDC,qBAAW,WAERjB,EAAQC,GACPiB,MAAM,SAAAC,GAGCH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAGlB,CAAEb,IAKAc,EDpBoBK,CAAcnB,GAAhCU,EAAZ,EAAOJ,KAAaO,EAApB,EAAoBA,QAKnB,OACI,qCACA,qBAAIjB,UAAU,yCAAd,cAAyDI,EAAzD,OAECa,GAAW,mBAAGjB,UAAU,wCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAIYc,EAAOF,KAAK,SAAAC,GAAG,OACd,cAAC,EAAD,eAEOA,GADCA,EAAIhB,aEpBpB2B,EAAe,WAGxB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAQA,OACI,qCACI,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAID,6BAEQ2C,EAAWb,KAAK,SAAAR,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAUA,GADLA,YCtBvBsB,G,MAAWC,SAASC,eAAe,SAEzCC,IAASC,OAAS,cAAC,EAAD,IAAkBJ,K","file":"static/js/main.7ef26f36.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2) {\r\n            \r\n            setCategories(cats => [ inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit}>\r\n            <input\r\n                type='text'\r\n                value={inputValue}\r\n                onChange={ handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url}) => {\r\n\r\n    // console.log( id, title, url);\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\n\r\nexport const getGifs = async(category) => {\r\n        \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&limit=10&api_key=0UetijWVkokrXFiSmu5xopV7mPuR6aKf`;\r\n    const resp = await fetch( url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n   \r\n}","\r\n\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\"\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n   const {data:images, loading}= useFetchGifs( category);\r\n\r\n   \r\n\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"card animate__animated animate__fadeIn\"> {category} </h3>\r\n\r\n        {loading && <p className=\"card animate__animated animate__flash\">loading</p>}\r\n\r\n        <div className=\"card-grid\">\r\n            \r\n          \r\n                {\r\n                    images.map( img => (\r\n                     <GifGridItem\r\n                        key={img.id}\r\n                        {...img} />\r\n                     ))\r\n                    }\r\n           \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs =  (category) => {\r\n\r\n    const [state, setState] = useState(\r\n        {\r\n            data: [],\r\n            loading: true\r\n        });\r\n\r\n        \r\n     useEffect( () => {\r\n\r\n        getGifs(category)\r\n        .then( imgs => {\r\n            \r\n          \r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n\r\n    } ) }, [ category])\r\n\r\n\r\n  \r\n\r\n      return state;\r\n\r\n}","// snipet rafc + tab\r\n\r\nimport React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n  \r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () => {\r\n\r\n    //     const newCategory = 'HunterxHunter';\r\n    //     setCategories([ newCategory, ...categories]);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2> GifExpertApp </h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n\r\n     \r\n\r\n           <ol>\r\n               {\r\n                   categories.map( category => (\r\n                        <GifGrid \r\n                        key={category}\r\n                        category={category} />\r\n                   ))\r\n               }\r\n           </ol>\r\n\r\n        </>\r\n\r\n       \r\n    )\r\n}\r\n\r\n\r\n// export default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {GifExpertApp} from './GifExpertApp';\n\nimport './index.css';\n\nconst divRoot =  document.getElementById('root');\n\nReactDOM.render(  <GifExpertApp />, divRoot );\n\n"],"sourceRoot":""}